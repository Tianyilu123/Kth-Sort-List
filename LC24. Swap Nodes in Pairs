// method 1:

class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null) return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        ListNode cur = head;
        while(cur != null && cur.next != null) {
            ListNode temp = cur.next.next;
            prev.next = cur.next;
            cur.next.next = cur;
            cur.next = temp;
            prev = cur;
            cur = cur.next;
        }
        return dummy.next;
    }
}

//O(n), O(1)


// method 2
class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode tHead = new ListNode(0);
        ListNode p = head, pos = tHead;
        while(p != null && p.next != null) {
            ListNode next = p.next.next;
            pos.next = p.next;
            pos.next.next = p;
            pos = p;
            p = next;
        }
        pos.next = p;
        return tHead.next;
    }
}

//O(n), O(1)
